For Tomcat Installation:-
------------------------
sudo apt update
sudo apt install docker.io -y
sudo docker search tomcat
sudo docker pull tomee
sudo docker run -d --name tomcat -p 8080:8080 tomcat:lts
sudo docker exec -it (container-ID) bash
cd conf
apt update
apt install nano
nano tomcat-users.xml

  <role rolename="admin-gui"/>
  <role rolename="admin-script"/>
  <role rolename="manager-gui"/>
  <role rolename="manager-script"/>

  <user username="admin" password="admin" roles="admin-gui,admin-script,manager-gui,manager-script"/>
</tomcat-users>


root@99004eb465cb:/usr/local/tomee/webapps/manager/META-INF 
 nano context.xml

<Context antiResourceLocking="false" privileged="true" >
  <CookieProcessor className="org.apache.tomcat.util.http.Rfc6265CookieProcessor"
                   sameSiteCookies="strict" />
  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow=".*" />
  <Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$L></Context>


=======================================================================================================================================================================================

Go to jenkins Dash Board->enable plugin tomcat pipeline => manage Jenkins->manage plugins->search in available plugin ->Deploy to container plugin ->install with out restart
And then Go to manage jenkins->global tool configuration (Tools)-> add maven (maven installation)
give a Git Hub credentials in global credentials => manage Jenkins-> Manage credentials-> Click on System ->Click on Global-> click on add credentials -> create credentials with kind is username with password
give a Tomcat credentials in global credentials => manage Jenkins-> Manage credentials-> Click on System ->Click on Global-> click on add credentials -> create credentials with kind is username with password
Note: Id in the while creating credentials and registryCredential in the pipeline must be same

=======================================================================================================================================================================================

PIPELINE:-
==========

pipeline {
    agent any
    tools {
        maven 'maven'
    }
    

    stages {
        stage('GIt check') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'GIT_CRED', url: 'https://github.com/Cvaaaa/maven-web-app.git']])
            }
        }
        stage('UNIT Testing') {
            steps {
                sh 'mvn test'
            }
        }
       
        stage('mvn build') {
            steps {
                sh "mvn clean install package"
            }
        }
        stage ('deploy') {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'tomee', path: '', url: 'http://50.16.20.155:8080')], contextPath: '01-maven-web-app.war', war: '**/*.war'
            }
        }
    }
}



===============================================================================================================================================================================

Note: click on pipeline syntex 
  Snippet Generator-> sample steps -> Search Checkout:checkout from the version control
                                      Paste to the git code in git repository URL and add git credentials -> specify the Branch Name -> And Then Generate Pipeline Script
          Ex: checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'GIT_CRED', url: 'https://github.com/Cvaaaa/maven-web-app.git']])

As Well As Tomcat pipeline syntex also 
  Snippet Generator-> sample steps -> Search deploy: Deploy war/ear to a container
                                      WAR/EAR files-> war or ear
                                      context path-> any name 
                                      add a container-> select to the Tomcat 9.X remote
                              And then add to Tomcat Credentintials and Tomcat URL -> Generate Pipeline Script
          Ex: deploy adapters: [tomcat9(credentialsId: 'tomee', path: '', url: 'http://50.16.20.155:8080')], contextPath: '01-maven-web-app.war', war: '**/*.war

