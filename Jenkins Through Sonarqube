For sonarqube installation:
-------------------------

sudo apt update or sudo yum update
sudo apt install docker.io -y
docker search sonarrqube
sudo docker run -d --name sonar -p 9000:9000 sonarqube:lts


Integrates the sonarqube with jenkins
------------------------------------------

On Sonarqube server:
   Generate a sonarqube token to authenticate from Jenkins

On Jenkins server:

Go to jenkins Dash Board->enable plugin sonar pipeline => manage Jenkins->manage plugins->search in available plugin ->sonarqube scanner ->install with out restart
And then Go to manage jenkins->global tool configuration (Tools)-> add maven (maven installation)
give a Git Hub credentials in global credentials => manage Jenkins-> Manage credentials-> Click on System ->Click on Global-> click on add credentials -> create credentials with kind is username with password
give a Sonarqube credentials in global credentials => manage Jenkins-> Manage credentials-> Click on System ->Click on Global-> click on add credentials -> kind-> create credentials with kind is Secret text
(sonarqube username:admin, password: copy and paste to the sonar qube tocken )
And then Go to manage jenkins->global tool configuration (Tools)-> add SonarQube Scanner installations (sonarqube scanner name)
Go to manage jenkins-> global system configuration (System)-> select to SonarQube servers -> Environment variables-> Name:sonar-> Server URL: http://100.26.254.45:9000-> Server authentication token
SonarQube authentication token. Mandatory when anonymous access is disabled.

    Run Pipeline job

======================================================================================================================================================

pipeline {
    agent any
    tools {
        maven 'maven'
    }
    environment {
        registry = "cvaa/petclinic7"
        registryCredential = "DOCK_CRED"
        dockerImage = ''
    }

    stages {
        stage('git clone') {
            steps {
                checkout scmGit(branches: [[name: '*/main']],
                extensions: [], userRemoteConfigs: [[credentialsId: 'GIT_CRED',
                url: 'https://github.com/Cvaaaa/spring-petclinic-docker.git']])
            }
        }
        stage('UNIT Testing') {
            steps {
                sh 'mvn test'
            }
        }
        stage ('Maven Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('code quality check') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'SONAR_CRED') {
                        sh "mvn clean package sonar:sonar"
                    }
                }
            }
        }
    }
}
